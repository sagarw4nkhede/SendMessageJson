<?xml version="1.0" encoding="UTF-8"?>
<sequence name="dynamicTemplateMessageBuilder" xmlns="http://ws.apache.org/ns/synapse">

    <!-- Set isImageUrlPresent and isVideoUrlPresent -->
    <property name="isImageUrlPresent" expression="boolean(get-property('imageUrl'))" scope="default"/>
    <property name="isVideoUrlPresent" expression="boolean(get-property('videoUrl'))" scope="default"/>

    <!-- Set mediaUrl from videoUrl or imageUrl -->
    <filter xpath="get-property('isVideoUrlPresent') = 'true'">
        <then>
            <property name="mediaUrl" expression="get-property('videoUrl')" scope="default"/>
            <property name="mediaType" value="VIDEO" scope="default"/>
        </then>
        <else>
            <property name="mediaUrl" expression="get-property('imageUrl')" scope="default"/>
            <property name="mediaType" value="IMAGE" scope="default"/>
        </else>
    </filter>

    <!-- Template-specific condition -->
    <filter xpath="get-property('templateName') = 'updated_psa_kci6_1' or get-property('templateName') = 'updated_psa_kci6_2' or get-property('templateName') = 'updated_bh_psa_kci6_1' or get-property('templateName') = 'updated_bh_psa_kci6_2'">
        <then>
            <script language="js"><![CDATA[
                var phArray = mc.getProperty("placeholders");
                var jsonArray = JSON.parse(phArray);
                mc.setProperty("ph1", jsonArray[0]);
                mc.setProperty("ph2", jsonArray[1]);
            ]]></script>

            <log>
                <property name="placeholder1" expression="get-property('ph1')"/>
                <property name="placeholder2" expression="get-property('ph2')"/>
                <property name="matched template" value="true"/>
            </log>

            <payloadFactory media-type="json" template-type="default">
                <format>
                    {
                        "messages": [
                            {
                                "from": "$1",
                                "to": "$2",
                                "messageId": "$3",
                                "content": {
                                    "templateName": "$4",
                                    "templateData": {
                                        "body": {
                                            "placeholders": $5
                                        },
                                        "buttons": [
                                            {
                                                "type": "QUICK_REPLY",
                                                "parameter": "Re-Appointment|$10|$8|$9"
                                            }
                                        ]
                                    },
                                    "language": "$6"
                                },
                                "callbackData": "Callback data from Infobip to Kraft: messageId = $3, templateName = $4",
                                "notifyUrl": "$7"
                            }
                        ]
                    }
                </format>
                <args>
                    <arg expression="get-property('from')"/>
                    <arg expression="get-property('to')"/>
                    <arg expression="get-property('messageId')"/>
                    <arg expression="get-property('templateName')"/>
                    <arg expression="get-property('placeholders')"/>
                    <arg expression="get-property('language')"/>
                    <arg expression="get-property('notifyUrl')"/>
                    <arg expression="get-property('ph1')"/>
                    <arg expression="get-property('ph2')"/>
                    <arg expression="get-property('cttNumber')"/>
                </args>
            </payloadFactory>
        </then>
        <else>
            <filter xpath="get-property('isButtonsPresent') = 'true'">
                <then>
                    <filter xpath="get-property('isImageUrlPresent') = 'true' or get-property('isVideoUrlPresent') = 'true'">
                        <then>
                            <!-- Buttons + media (image/video) -->
                            <log><property name="Block" value="Buttons + Media"/></log>
                            <payloadFactory media-type="json" template-type="default">
                                <format>
                                    {
                                        "messages": [
                                            {
                                                "from": "$1",
                                                "to": "$2",
                                                "messageId": "$3",
                                                "content": {
                                                    "templateName": "$4",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": $5
                                                        },
                                                        "header": {
                                                            "type": "$6",
                                                            "mediaUrl": "$7"
                                                        },
                                                        "buttons": $8
                                                    },
                                                    "language": "$9"
                                                },
                                                "callbackData": "Callback data from Infobip to Kraft: messageId = $3, templateName = $4",
                                                "notifyUrl": "$10"
                                            }
                                        ]
                                    }
                                </format>
                                <args>
                                    <arg expression="get-property('from')"/>
                                    <arg expression="get-property('to')"/>
                                    <arg expression="get-property('messageId')"/>
                                    <arg expression="get-property('templateName')"/>
                                    <arg expression="get-property('placeholders')"/>
                                    <arg expression="get-property('mediaType')"/>
                                    <arg expression="get-property('mediaUrl')"/>
                                    <arg expression="get-property('buttons')"/>
                                    <arg expression="get-property('language')"/>
                                    <arg expression="get-property('notifyUrl')"/>
                                </args>
                            </payloadFactory>
                        </then>
                        <else>
                            <!-- Buttons only -->
                            <log><property name="Block" value="Buttons only"/></log>
                            <payloadFactory media-type="json" template-type="default">
                                <format>
                                    {
                                        "messages": [
                                            {
                                                "from": "$1",
                                                "to": "$2",
                                                "messageId": "$3",
                                                "content": {
                                                    "templateName": "$4",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": $5
                                                        },
                                                        "buttons": $6
                                                    },
                                                    "language": "$7"
                                                },
                                                "callbackData": "Callback data from Infobip to Kraft: messageId = $3, templateName = $4",
                                                "notifyUrl": "$8"
                                            }
                                        ]
                                    }
                                </format>
                                <args>
                                    <arg expression="get-property('from')"/>
                                    <arg expression="get-property('to')"/>
                                    <arg expression="get-property('messageId')"/>
                                    <arg expression="get-property('templateName')"/>
                                    <arg expression="get-property('placeholders')"/>
                                    <arg expression="get-property('buttons')"/>
                                    <arg expression="get-property('language')"/>
                                    <arg expression="get-property('notifyUrl')"/>
                                </args>
                            </payloadFactory>
                        </else>
                    </filter>
                </then>
                <else>
                    <filter xpath="get-property('isImageUrlPresent') = 'true' or get-property('isVideoUrlPresent') = 'true'">
                        <then>
                            <!-- Media (image/video) only -->
                            <log><property name="Block" value="Media only"/></log>
                            <payloadFactory media-type="json" template-type="default">
                                <format>
                                    {
                                        "messages": [
                                            {
                                                "from": "$1",
                                                "to": "$2",
                                                "messageId": "$3",
                                                "content": {
                                                    "templateName": "$4",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": $5
                                                        },
                                                        "header": {
                                                            "type": "$6",
                                                            "mediaUrl": "$7"
                                                        }
                                                    },
                                                    "language": "$8"
                                                },
                                                "callbackData": "Callback data from Infobip to Kraft: messageId = $3, templateName = $4",
                                                "notifyUrl": "$9"
                                            }
                                        ]
                                    }
                                </format>
                                <args>
                                    <arg expression="get-property('from')"/>
                                    <arg expression="get-property('to')"/>
                                    <arg expression="get-property('messageId')"/>
                                    <arg expression="get-property('templateName')"/>
                                    <arg expression="get-property('placeholders')"/>
                                    <arg expression="get-property('mediaType')"/>
                                    <arg expression="get-property('mediaUrl')"/>
                                    <arg expression="get-property('language')"/>
                                    <arg expression="get-property('notifyUrl')"/>
                                </args>
                            </payloadFactory>
                        </then>
                        <else>
                            <!-- Only placeholders -->
                            <log><property name="Block" value="Placeholders only"/></log>
                            <payloadFactory media-type="json" template-type="default">
                                <format>
                                    {
                                        "messages": [
                                            {
                                                "from": "$1",
                                                "to": "$2",
                                                "messageId": "$3",
                                                "content": {
                                                    "templateName": "$4",
                                                    "templateData": {
                                                        "body": {
                                                            "placeholders": $5
                                                        }
                                                    },
                                                    "language": "$6"
                                                },
                                                "callbackData": "Callback data from Infobip to Kraft: messageId = $3, templateName = $4",
                                                "notifyUrl": "$7"
                                            }
                                        ]
                                    }
                                </format>
                                <args>
                                    <arg expression="get-property('from')"/>
                                    <arg expression="get-property('to')"/>
                                    <arg expression="get-property('messageId')"/>
                                    <arg expression="get-property('templateName')"/>
                                    <arg expression="get-property('placeholders')"/>
                                    <arg expression="get-property('language')"/>
                                    <arg expression="get-property('notifyUrl')"/>
                                </args>
                            </payloadFactory>
                        </else>
                    </filter>
                </else>
            </filter>
        </else>
    </filter>

    <!-- Final log -->
    <log level="full">
        <property name="placeholders" expression="get-property('placeholders')"/>
        <property name="buttons" expression="get-property('buttons')"/>
        <property name="mediaUrl" expression="get-property('mediaUrl')"/>
        <property name="mediaType" expression="get-property('mediaType')"/>
    </log>

</sequence>
